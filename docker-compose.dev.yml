version: '3'

services:
  web:
    build: ./movies_admin
    env_file:
      - ./.env
    expose:
      - 8000
    volumes:
      - static:/opt/app/static/
    depends_on:
      - db

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./src/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    env_file:
      - ./.env
    environment:
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
      - POSTGRES_DB=${SQL_DATABASE}
    ports:
      - ${SQL_PORT}:${SQL_PORT}

  nginx:
    image: nginx:latest
    volumes:
      - static:/data/static/:ro
      - ./src/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./src/configs:/etc/nginx/conf.d:ro
    depends_on:
      - web
    ports:
      - "80:80"
      - "8000:8000"

  elastic:
    build: ./elasticsearch
    volumes:
      - data_es:/usr/share/elasticsearch/data:rw
    env_file:
      - ./.env
    depends_on:
      - web
    mem_limit: ${ES_MEM_LIMIT}
    ports:
      - ${ES_PORT}:9200

  redis:
    image: redis:7-alpine
    command: redis-server --save 20 1 --loglevel warning --port $REDIS_PORT --requirepass $REDIS_PASSWORD
    restart: always
    volumes:
      - data_rds:/data
    env_file:
      - ./.env
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}

volumes:
  data_es:
  data_rds:
  postgres_data:
  static:
